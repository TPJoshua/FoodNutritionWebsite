@page "/users/create"
@inject HttpClient _client
@inject NavigationManager _navManager

<div class="create-user-container">
    <h3 class="create-user-title">Create New User</h3>
    <hr />
    <EditForm Model="@user" OnValidSubmit="CreateUsers">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <!-- User Name field -->
        <div class="form-group">
            <label for="userName">User Name:</label>
            <InputText id="userName" @bind-Value="user.UserName" class="form-control" placeholder="Enter user name" />
            <ValidationMessage For="@(() => user.UserName)" />
        </div>

        <!-- User DOB field -->
        <div class="form-group">
            <label for="userDOB">User DOB:</label>
            <InputText id="userDOB" @bind-Value="user.UserDOB" class="form-control" placeholder="DD-MM-YYYY" />
            <ValidationMessage For="@(() => user.UserDOB)" />
        </div>

        <!-- User Gender field -->
        <div class="form-group">
            <label for="gender">User Gender:</label>
            <InputText id="gender" @bind-Value="user.Gender" class="form-control" placeholder="Enter user gender" />
            <ValidationMessage For="@(() => user.Gender)" />
        </div>

        <!-- User Phone Number field -->
        <div class="form-group">
            <label for="userPhoneNum">User Phone Number:</label>
            <InputText id="userPhoneNum" @bind-Value="user.UserPhoneNum" class="form-control" placeholder="Enter user phone number" />
            <ValidationMessage For="@(() => user.UserPhoneNum)" />
        </div>

        <!-- User Email field -->
        <div class="form-group">
            <label for="userEmail">User Email:</label>
            <InputText id="userEmail" @bind-Value="user.UserEmail" class="form-control" placeholder="Enter user email" />
            <ValidationMessage For="@(() => user.UserEmail)" />
        </div>

        <!-- User Password field -->
        <div class="form-group">
            <label for="userPassword">User Password:</label>
            <InputText id="userPassword" @bind-Value="user.UserPassword" class="form-control" placeholder="Enter user password" />
            <ValidationMessage For="@(() => user.UserPassword)" />
        </div>

        <!-- Subscription field -->
        <div class="form-group">
            <label for="subscriptionID">Subscription:</label>
            <InputSelect id="subscriptionID" @bind-Value="user.SubscriptionID" class="form-control">
                <option value="">-- Select Subscription --</option>
                @if (subscription != null)
                {
                    foreach (var subscrip in subscription)
                    {
                        <option value="@subscrip.Id">@subscrip.SubscriptionName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => user.SubscriptionID)" />
        </div>


    <!-- Other form components go here -->

    <button type="submit" class="btn btn-success btn-block">Create FoodLog</button>

    <button type="button" class="btn btn-secondary btn-block" @onclick="BackToList">Back to List</button>
    

</EditForm>
</div>





@code {
    User user = new User();
    private IList<Subscription>? subscription;

    protected override async Task OnInitializedAsync()
    {
        subscription = await _client.GetFromJsonAsync<List<Subscription>>("api/Subscriptions");
    }

    private async Task CreateUsers()
    {
        await _client.PostAsJsonAsync("api/Users", user);
        _navManager.NavigateTo("/users");
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/users");
    }
}