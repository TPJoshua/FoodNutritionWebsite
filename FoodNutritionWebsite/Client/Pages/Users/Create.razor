@page "/users/create"
@inject HttpClient _client
@inject NavigationManager _navManager



<h3 class="card-title">Create Users Page</h3>
<hr />
<br />

<EditForm Model="@user" OnValidSubmit="CreateUsers">
	<DataAnnotationsValidator />
	<ValidationSummary />



    <div class="form-group">
        <label>User Name: </label>
        <div>
            <InputText @bind-Value="user.UserName" class="form-control" />
            <ValidationMessage For="@(() => user.UserName)" />

        </div>
    </div>


    <div class="form-group">
        <label>User DOB: </label>
        <div>
            <InputText @bind-Value="user.UserDOB" class="form-control" />
            <ValidationMessage For="@(() => user.UserDOB)" />

        </div>
    </div>

    <div class="form-group">
        <label>User Gender: </label>
        <div>
            <InputText @bind-Value="user.Gender" class="form-control" />
            <ValidationMessage For="@(() => user.Gender)" />

        </div>
    </div>

    <div class="form-group">
        <label>User UserPhoneNum: </label>
        <div>
            <InputText @bind-Value="user.UserPhoneNum" class="form-control" />
            <ValidationMessage For="@(() => user.UserPhoneNum)" />

        </div>
    </div>

    <div class="form-group">
        <label>User UserEmail: </label>
        <div>
            <InputText @bind-Value="user.UserEmail" class="form-control" />
            <ValidationMessage For="@(() => user.UserEmail)" />

        </div>
    </div>

    <div class="form-group">
        <label>User UserPassword: </label>
        <div>
            <InputText @bind-Value="user.UserPassword" class="form-control" />
            <ValidationMessage For="@(() => user.UserPassword)" />

        </div>
    </div>

    



    <div class="form-group">
        <label>Subscription:</label>
        <div>
            <InputSelect @bind-Value="user.SubscriptionID" class="form-control">
                <option value="">--Select Subscription--</option>
                @if (subscription != null)
                {
                    foreach (var subscrip in subscription)
                    {
                        <option value="@subscrip.Id">@subscrip.SubscriptionName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => user.SubscriptionID)" />
        </div>
    </div>


    <!-- Other form components go here -->

    <button type="submit" class="btn btn-success btn-block">Create FoodLog</button>


</EditForm>






@code {
    User user = new User();
    private IList<Subscription>? subscription;



    protected async override Task OnInitializedAsync()
    {
        subscription = await _client.GetFromJsonAsync<List<Subscription>>($"api/Subscriptions");

    }


	private async Task CreateUsers()
	{
		await _client.PostAsJsonAsync("api/Users/", user);
		_navManager.NavigateTo("/users");

	}
}
