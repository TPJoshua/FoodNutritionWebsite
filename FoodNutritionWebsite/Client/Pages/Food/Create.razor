<h3>Create</h3>

@page "/Food/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Food</h3>
<hr />
<br />

<EditForm Model="@food" OnValidSubmit="CreateFood">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="form-group">
		<label>Name: </label>
		<div>
			<InputText @bind-Value="@food.FoodName" class="form-control" />
			<ValidationMessage For="@(() => food.FoodName)" />
		</div>
	</div>
	<div class="form-group">
		<label>Description: </label>
		<div>
			<InputText @bind-Value="@food.FoodDescription" class="form-control" />
			<ValidationMessage For="@(() => food.FoodDescription)" />
		</div>
	</div>
	<div class="form-group">
		<label>Category: </label>
		<div>
			<InputText @bind-Value="@food.FoodCategory" class="form-control" />
			<ValidationMessage For="@(() => food.FoodCategory)" />
		</div>
	</div>
	<div class="form-group">
		<label>Picture: </label>
		<div>
			<InputText @bind-Value="@food.FoodPicture" class="form-control" />
			<ValidationMessage For="@(() => food.FoodPicture)" />
		</div>
	</div>
	<div class="form-group">
		<label>Calory: </label>
		<div>
			<InputText @bind-Value="@food.FoodCalory" class="form-control" />
			<ValidationMessage For="@(() => food.FoodCalory)" />
		</div>
	</div>

	<button type="submit" class="btn btn-success btn-block">
		Create Food
	</button>
</EditForm>

@code {
    Food food = new Food();

	private async Task CreateFood()
	{
		await _client.PostAsJsonAsync("api/Foods/", food);
		_navManager.NavigateTo("/foods/");
	}
}
