@inject HttpClient _client
@inject NavigationManager _navManager

<EditForm Model="@mealplan" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled">
        <div class="container mt-5">
            <div class="row justify-content-center">
                <div class="col-lg-8">
                    <div class="card p-4">
                        <div class="form-group">
                            <label style=" margin-top: 0.5rem; color: black;">Name: </label>
                            <div>
                                <InputText @bind-Value="@mealplan.MealPlanName" class="form-control" />
                                <ValidationMessage For="@(() => mealplan.MealPlanName)" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label style=" margin-top: 0.5rem; color: black;">Category: </label>
                            <div>
                                <InputText @bind-Value="@mealplan.MealPlanCategory" class="form-control" />
                                <ValidationMessage For="@(() => mealplan.MealPlanCategory)" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label style=" margin-top: 0.5rem; color: black;">Staff: </label>
                            <div>
                                <InputSelect @bind-Value="mealplan.StaffID" class="form-control">
                                    <option value"">-- Select Staff --</option>
                                    @if (Staffs != null)
                                    {
                                        foreach (var staff in Staffs)
                                        {
                                            <option value="@staff.Id">@staff.FirstName</option>
                                        }
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => mealplan.StaffID)" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </fieldset>
    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }

</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    private IList<Staff>? Staffs;

    protected async override Task OnInitializedAsync()
    {
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"api/Staffs");
    }

    [Parameter] public MealPlan? mealplan { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }


    private async Task BackToList()
    {
        _navManager.NavigateTo("/users");
    }
}