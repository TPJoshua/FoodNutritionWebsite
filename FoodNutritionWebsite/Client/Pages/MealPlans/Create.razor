@page "/MealPlans/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<div class="create-mealplan-container">
    <h3 class="create-mealplan-title">Create New Meal Plan</h3>
    <hr />
    <EditForm Model="@mealplan" OnValidSubmit="CreateMealPlan">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <!-- Name field -->
        <div class="form-group">
            <label for="mealPlanName">Name:</label>
            <InputText id="mealPlanName" @bind-Value="@mealplan.MealPlanName" class="form-control" placeholder="Enter meal plan name" />
            <ValidationMessage For="@(() => mealplan.MealPlanName)" />
        </div>

        <!-- Category field -->
        <div class="form-group">
            <label for="mealPlanCategory">Category:</label>
            <InputText id="mealPlanCategory" @bind-Value="@mealplan.MealPlanCategory" class="form-control" placeholder="Enter meal plan category" />
            <ValidationMessage For="@(() => mealplan.MealPlanCategory)" />
        </div>

        <!-- Staff field -->
        <div class="form-group">
            <label for="staffID">Staff:</label>
            <InputSelect id="staffID" @bind-Value="@mealplan.StaffID" class="form-control">
                <option value="">-- Select Staff --</option>
                @if (Staffs != null)
                {
                    foreach (var staff in Staffs)
                    {
                        <option value="@staff.Id">@staff.FirstName @staff.LastName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => mealplan.StaffID)" />
        </div>

        <!-- Form actions -->
        <div class="form-actions">
            <button type="submit" class="btn btn-create">Create Meal Plan</button>
        </div>
    </EditForm>
</div>

@code {
	MealPlan mealplan = new MealPlan();

	private IList<Staff>? Staffs;

	protected async override Task OnInitializedAsync()
	{
		Staffs = await _client.GetFromJsonAsync<List<Staff>>($"api/Staffs");
	}

	private async Task CreateMealPlan()
	{
		await _client.PostAsJsonAsync($"api/mealplans", mealplan);
		_navManager.NavigateTo("/MealPlans/");
	}
}
