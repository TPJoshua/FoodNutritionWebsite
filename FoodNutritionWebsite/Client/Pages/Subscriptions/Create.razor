@page "/Subscriptions/create"
@inject HttpClient _client
@inject NavigationManager _navManager

<div class="create-subscription-container">
    <h3 class="create-subscription-title" style="color: black">Create Subscription Page</h3>
    <hr />

    <EditForm Model="@subscription" OnValidSubmit="CreateSubscription">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label style="color: black">Subscription Name:</label>
            <InputText @bind-Value="subscription.SubscriptionName" class="form-control" placeholder="Enter Subscription Name" />
            <ValidationMessage For="@(() => subscription.SubscriptionName)" />
        </div>

        <div class="form-group">
            <label style="color: black">Meal Plan:</label>
            <InputSelect @bind-Value="subscription.MealPlanID" class="form-control">
                <option value="">--Select Meal Plan--</option>
                @if (mealplan != null)
                {
                    foreach (var mealplans in mealplan)
                    {
                        <option value="@mealplans.Id">@mealplans.MealPlanName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => subscription.MealPlanID)" />
        </div>

        <div class="form-group">
            <label style="color: black">Subscription Price:</label>
            <InputNumber @bind-Value="subscription.SubscriptionPrice" class="form-control" step="0.01" />
            <ValidationMessage For="@(() => subscription.SubscriptionPrice)" />
        </div>

        <div class="form-group">
            <label style="color: black">Subscription Description:</label>
            <InputText @bind-Value="subscription.SubscriptionDescription" class="form-control" placeholder="Enter Subscription Description" />
            <ValidationMessage For="@(() => subscription.SubscriptionDescription)" />
        </div>

        <div class="form-group">
            <label style="color: black">Payment Description:</label>
            <InputText @bind-Value="subscription.PaymentDescription" class="form-control" placeholder="Enter Payment Description" />
            <ValidationMessage For="@(() => subscription.PaymentDescription)" />
        </div>

        <div class="form-actions">
            <button type="submit" class="btn btn-success">Create Subscription</button>
            <button type="button" class="btn btn-secondary" @onclick="BackToList">Back to List</button>
        </div>
    </EditForm>
</div>

@code {
    Subscription subscription = new Subscription();
    private IList<MealPlan>? mealplan;

    protected override async Task OnInitializedAsync()
    {
        mealplan = await _client.GetFromJsonAsync<List<MealPlan>>("api/mealplans");
    }

    private async Task CreateSubscription()
    {
        await _client.PostAsJsonAsync("api/Subscriptions", subscription);
        _navManager.NavigateTo("/Subscriptions");
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/Subscriptions");
    }
}