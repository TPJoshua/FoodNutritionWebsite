@inject NavigationManager _navManager

<EditForm Model="@subscription" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    
    <fieldset disabled="@Disabled">

        <div class="form-group">
            <label>Subscription Name: </label>
            <div>
                <InputText @bind-Value="subscription.SubscriptionName" class="form-control" />
                <ValidationMessage For="@(() => subscription.SubscriptionName)" />

            </div>
        </div>




        <div class="form-group">
            <label>Subscription Price: </label>
            <div>
                <InputNumber @bind-Value="subscription.SubscriptionPrice" class="form-control" />
                <ValidationMessage For="@(() => subscription.SubscriptionPrice)" />

            </div>
        </div>

        <div class="form-group">
            <label>Subscription Description: </label>
            <div>
                <InputText @bind-Value="subscription.SubscriptionDescription" class="form-control" />
                <ValidationMessage For="@(() => subscription.SubscriptionDescription)" />

            </div>
        </div>

        <div class="form-group">
            <label>Payment Description: </label>
            <div>
                <InputText @bind-Value="subscription.PaymentDescription" class="form-control" />
                <ValidationMessage For="@(() => subscription.PaymentDescription)" />

            </div>
        </div>

    </fieldset>


    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }

    <button type="button" class="btn btn-secondary btn-block" @onclick="BackToList">Back to List</button>


</EditForm>




@code{
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Subscription? subscription { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }


    private async Task BackToList()
    {
        _navManager.NavigateTo("/users");
    }
}