@inject HttpClient _client
@inject NavigationManager _navManager


<EditForm Model="@subscription" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="container mt-5">
            <div class="row justify-content-center">
                <div class="col-lg-8">
                    <div class="card p-4">

                        <div class="form-group">
                            <label style="color: black">First Name: </label>
                            <div>
                                <InputText @bind-Value="@subscription.FirstName" class="form-control" placeholder="Please input First Name" />
                                <ValidationMessage For="@(() => subscription.FirstName)" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label style="color: black">Last Name: </label>
                            <div>
                                <InputText @bind-Value="@subscription.LastName" class="form-control" placeholder="Please input Last Name" />
                                <ValidationMessage For="@(() => subscription.LastName)" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label style="color: black">Date Of Birth: </label>
                            <div>
                                <InputDate @bind-Value="@subscription.DOB" class="form-control" placeholder="Please input Date Of Birth" />
                                <ValidationMessage For="@(() => subscription.DOB)" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label style="color: black">Gender: </label>
                            <div>
                                <InputText @bind-Value="@subscription.Gender" class="form-control" placeholder="Please input Gender" />
                                <ValidationMessage For="@(() => subscription.Gender)" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label style="color: black">Contact Number: </label>
                            <div>
                                <InputText @bind-Value="@subscription.ContactNumber" class="form-control" placeholder="Please input Contact Number" />
                                <ValidationMessage For="@(() => subscription.ContactNumber)" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label style="color: black">Personal Email: </label>
                            <div>
                                <InputText @bind-Value="@subscription.PersonalEmail" class="form-control" placeholder="Please input Personal Email" />
                                <ValidationMessage For="@(() => subscription.PersonalEmail)" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label style="color: black">Work Email: </label>
                            <div>
                                <InputText @bind-Value="@subscription.WorkEmail" class="form-control" placeholder="Please input Work Email" />
                                <ValidationMessage For="@(() => subscription.WorkEmail)" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label style="color: black">Address: </label>
                            <div>
                                <InputText @bind-Value="@subscription.Address" class="form-control" placeholder="Please input Address" />
                                <ValidationMessage For="@(() => subscription.Address)" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label style="color: black">Role: </label>
                            <div>
                                <InputText @bind-Value="@subscription.Role" class="form-control" placeholder="Please input Role" />
                                <ValidationMessage For="@(() => subscription.Role)" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label style="color: black">Start Date: </label>
                            <div>
                                <InputDate @bind-Value="@subscription.StartDate" class="form-control" placeholder="Please input Start Date" />
                                <ValidationMessage For="@(() => subscription.StartDate)" />
                            </div>
                        </div>

                        @if (!Disabled)
                        {
                            <button type="submit" class="btn btn-primary btn-block" style="margin-top: 1.5rem; ">
                                @ButtonText
                            </button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }

    <button type="button" class="btn btn-secondary btn-block" @onclick="BackToList">Back to List</button>

</EditForm>


@code {
    [Parameter] public Subscription? subscription { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public bool Disabled { get; set; } = false;


    private async Task BackToList()
    {
        _navManager.NavigateTo("/subscriptions");
    }
}