@page "/FoodLogs/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<div class="create-foodlog-container">
    <h3 class="create-foodlog-title">Create New Food Log</h3>
    <hr />
    <EditForm Model="@foodlog" OnValidSubmit="CreateFoodLog">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="userID">User:</label>
            <InputSelect @bind-Value="foodlog.UserID" id="userID" class="form-control">
                <option value="">--Select User--</option>
                @if (Users != null)
                {
                    foreach (var user in Users)
                    {
                        <option value="@user.Id">@user.UserName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => foodlog.UserID)" />
        </div>

        <div class="form-group">
            <label for="foodID">Food Name:</label>
            <InputSelect @bind-Value="foodlog.FoodID" id="foodID" class="form-control">
                <option value="">--Select Food--</option>
                @if (Foods != null)
                {
                    foreach (var food in Foods)
                    {
                        <option value="@food.Id">@food.FoodName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => foodlog.FoodID)" />
        </div>

        <div class="form-group">
            <label for="quantity" style="color: black">Quantity:</label>
            <InputNumber @bind-Value="foodlog.Quantity" id="quantity" class="form-control" placeholder="Enter Quantity" />
            <ValidationMessage For="@(() => foodlog.Quantity)" />
        </div>

        <div class="form-actions">

            <button type="submit" class="btn btn-create ">
                <i class="oi oi-circle-check" style="margin-right: 2px;"></i>
                Create
            </button>

            <button type="button" class="btn btn-secondary" @onclick="BackToList">
                <i class="oi oi-arrow-left" style="margin-right: 2px;"></i>
                Back
            </button>
        </div>
    </EditForm>
</div>

@code {
    FoodLog foodlog = new FoodLog();
    private IList<User>? Users;
    private IList<Food>? Foods;

    protected override async Task OnInitializedAsync()
    {
        Users = await _client.GetFromJsonAsync<List<User>>("api/Users");
        Foods = await _client.GetFromJsonAsync<List<Food>>("api/Foods");
    }

    private async Task CreateFoodLog()
    {
        await _client.PostAsJsonAsync("api/FoodLogs/", foodlog);
        _navManager.NavigateTo("/FoodLogs");
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/FoodLogs");
    }
}