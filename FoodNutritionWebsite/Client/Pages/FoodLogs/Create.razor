@page "/FoodLogs/create/"
@inject HttpClient _client
@inject NavigationManager _navManager




<h3 class="card-title">Create FoodLog Page</h3>
<hr />
<br />


<EditForm Model="@foodlog" OnValidSubmit="CreateFoodLog">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>User:</label>
        <div>
            <InputSelect @bind-Value="foodlog.UserID" class="form-control">
                <option value="">--Select User--</option>
                @if (Users != null)
                {
                    foreach (var user in Users)
                    {
                        <option value="@user.Id">@user.UserName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => foodlog.UserID)" />
        </div>
    </div>


    <div class="form-group">
        <label>Food Name:</label>
        <div>
            <InputSelect @bind-Value="foodlog.FoodID" class="form-control">
                <option value="">--Select Food--</option>
                @if (Foods != null)
                {
                    foreach (var foods in Foods)
                    {
                        <option value="@foods.Id">@foods.FoodName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => foodlog.FoodID)" />
        </div>
    </div>


    <div class="form-group">
        <label>Quantity: </label>
        <div>
            <InputNumber @bind-Value="foodlog.Quantity" class="form-control" />
            <ValidationMessage For="@(() => foodlog.Quantity)" />

        </div>
    </div>



    


    


    <!-- Other form components go here -->

    <button type="submit" class="btn btn-success btn-block">Create FoodLog</button>


    <button type="button" class="btn btn-secondary btn-block" @onclick="BackToList">Back to List</button>

</EditForm>




@code {
    FoodLog foodlog = new FoodLog();

    private IList<User>? Users;
    private IList<Food>? Foods;



    protected async override Task OnInitializedAsync()
    {
        Users = await _client.GetFromJsonAsync<List<User>>($"api/Users");
        Foods = await _client.GetFromJsonAsync<List<Food>>($"api/foods/");

	}

	private async Task CreateFoodLog()
	{
		await _client.PostAsJsonAsync("api/FoodLogs/", foodlog);
		_navManager.NavigateTo("/FoodLogs");

	}

    private async Task BackToList()
    {
        _navManager.NavigateTo("/FoodLogs");
    }



}