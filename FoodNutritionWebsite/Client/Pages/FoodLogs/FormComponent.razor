@inject HttpClient _client


<EditForm Model="@foodlog" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Food Name: </label>
        <div>
            <InputText @bind-Value="foodlog.FoodName" class="form-control" />
            <ValidationMessage For="@(() => foodlog.FoodName)" />

        </div>
    </div>

    <div class="form-group">
        <label>Food Type: </label>
        <div>
            <InputText @bind-Value="foodlog.FoodType" class="form-control" />
            <ValidationMessage For="@(() => foodlog.FoodType)" />

        </div>
    </div>









    <div class="form-group">
        <label>User:</label>
        <div>
            <InputSelect @bind-Value="foodlog.UserID" class="form-control">
                <option value="">--Select User--</option>
                @if (Users != null)
                {
                    foreach (var user in Users)
                    {
                        <option value="@user.Id">@user.UserName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => foodlog.UserID)" />
        </div>
    </div>


    <!-- Other form components go here -->

    <button type="submit" class="btn btn-success btn-block">
        @ButtonText
    </button>
</EditForm>




@code {
    [Parameter] public FoodLog? foodlog { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    
    private IList<User>? Users;

    protected async override Task OnInitializedAsync()
    {
        Users = await _client.GetFromJsonAsync<List<User>>($"{"api/Users/"}");

    }
}