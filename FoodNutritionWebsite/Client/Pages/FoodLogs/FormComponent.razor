@inject NavigationManager _navManager
@inject HttpClient _client



<EditForm Model="@foodlog" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled">
        <div class="container mt-5">
            <div class="row justify-content-center">
                <div class="col-lg-8">
                    <div class="card p-4">
                        <div class="form-group">
                            <label for="userID" style="color: black">User:</label>
                            <InputSelect @bind-Value="foodlog.UserID" id="userID" class="form-control">
                                <option value="">--Select User--</option>
                                @if (Users != null)
                                {
                                    foreach (var user in Users)
                                    {
                                        <option value="@user.Id">@user.UserName</option>
                                    }
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => foodlog.UserID)" />
                        </div>

                        <div class="form-group">
                            <label for="foodID" style="color: black">Food Name:</label>
                            <InputSelect @bind-Value="foodlog.FoodID" id="foodID" class="form-control">
                                <option value="">--Select Food--</option>
                                @if (Foods != null)
                                {
                                    foreach (var food in Foods)
                                    {
                                        <option value="@food.Id">@food.FoodName</option>
                                    }
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => foodlog.FoodID)" />
                        </div>

                        <div class="form-group">
                            <label for="quantity" style="color: black">Quantity:</label>
                            <InputNumber @bind-Value="foodlog.Quantity" id="quantity" class="form-control" placeholder="Enter Quantity" />
                            <ValidationMessage For="@(() => foodlog.Quantity)" />
                        </div>
                        @if (!Disabled)
                        {
                            <button type="submit" class="btn btn-success btn-block">
                                @ButtonText
                            </button>
                        }
                        
                    </div>
                </div>
            </div>
        </div>
        

    </fieldset>
</EditForm>


@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public FoodLog? foodlog { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<User>? Users;
    private IList<Food>? Foods;

    protected async override Task OnInitializedAsync()
    {
        Users = await _client.GetFromJsonAsync<List<User>>($"{"api/Users/"}");
        Foods = await _client.GetFromJsonAsync<List<Food>>($"api/foods/");

    }

    private async Task BackToList()
    {
        _navManager.NavigateTo("/Foodlogs");
    }
}