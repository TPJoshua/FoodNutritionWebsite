@page "/FoodLogs"
@inject HttpClient _client
@inject IJSRuntime js
@inject HttpInterceptorService _interceptor
@implements IDisposable
@attribute [Authorize]

<h3>Food Log Index</h3>

<a href="/FoodLogs/create" class="btn btn-primary my-2">
    <span class="oi oi-plus"></span> Create New Food Log
</a>
<br />
<br />

<div class="container-fluid">
    <div class="row row-cols-1 row-cols-md-3 g-4 mt-2">
        @if (FoodLogs == null)
        {
            <div class="alert alert-info">Loading Food Logs...</div>
        }
        else
        {
            foreach (var foodLog in FoodLogs)
            {
                <div class="col">
                    <div class="card h-100">
                        <img src="@foodLog.Food.FoodPicture" class="card-img-top" alt="@foodLog.Food.FoodName">
                        <div class="card-body">
                            <h5 class="card-title">@foodLog.Food.FoodName</h5>
                            <p class="card-text">
                                Food name: @foodLog.Food.FoodName<br>
                                Calory: @foodLog.Food.FoodCalory<br>
                                Quantity: @foodLog.Quantity<br>
                                Date: @foodLog.DateUpdated<br>
                                User: @foodLog.User.UserName
                            </p>
                            <div class="text-center">
                                <a href="/FoodLogs/view/@foodLog.Id" class="btn btn-primary m-1">
                                    <i class="oi oi-eye"></i>
                                    View
                                </a>
                                <a href="/FoodLogs/edit/@foodLog.Id" class="btn btn-warning m-1">
                                    <i class="oi oi-pencil"></i>
                                    Edit
                                </a>
                                <button class="btn btn-danger m-1" @onclick="@(() => Delete(foodLog.Id))">
                                    <i class="oi oi-trash"></i>
                                    Delete
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@code {
    public List<FoodLog>? FoodLogs;

    protected override async Task OnInitializedAsync()
    {
        _interceptor.MonitorEvent();
        FoodLogs = await _client.GetFromJsonAsync<List<FoodLog>>("api/FoodLogs");
    }

    async Task Delete(int foodLogId)
    {
        var confirm = await js.InvokeAsync<bool>("confirm", "Do you want to delete this food log?");
        if (confirm)
        {
            await _client.DeleteAsync($"api/FoodLogs/{foodLogId}");
            FoodLogs = await _client.GetFromJsonAsync<List<FoodLog>>("api/FoodLogs");
            StateHasChanged();
        }
    }

    public void Dispose()
    {
        _interceptor.DisposeEvent();
    }
}