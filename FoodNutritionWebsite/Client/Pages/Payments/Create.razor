@page "/Payments/create"
@inject HttpClient _client
@inject NavigationManager _navManager

<div class="create-payment-container">
    <h3 class="create-payment-title">Create New Payment</h3>
    <hr />
    <EditForm Model="@payment" OnValidSubmit="CreatePayment">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="subscriptionID" style="color: black">Subscription:</label>
            <InputSelect id="subscriptionID" @bind-Value="payment.SubscriptionID" class="form-control">
                <option value="">--Select Subscription--</option>
                @if (subscription != null)
                {
                    foreach (var subscrip in subscription)
                    {
                        <option value="@subscrip.Id">@subscrip.SubscriptionName</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => payment.SubscriptionID)" />
        </div>

        <div class="form-group">
            <label for="cardNum" style="color: black">Payment Card:</label>
            <InputText id="cardNum" @bind-Value="payment.CardNum" class="form-control" placeholder="Enter card number" />
            <ValidationMessage For="@(() => payment.CardNum)" />
        </div>

        <div class="form-group">
            <label for="cvv" style="color: black">Card CVV:</label>
            <InputText id="cvv" @bind-Value="payment.Cvv" class="form-control" placeholder="Enter CVV" />
            <ValidationMessage For="@(() => payment.Cvv)" />
        </div>

        <div class="form-group">
            <label for="cardExp" style="color: black">Card Expiry:</label>
            <InputText id="cardExp" @bind-Value="payment.CardExp" class="form-control" placeholder="MM/YY" />
            <ValidationMessage For="@(() => payment.CardExp)" />
        </div>

        <div class="form-actions">
            <button type="submit" class="btn btn-create">
                <i class="oi oi-circle-check" style="margin-right: 2px;"></i>
                Create Payment
                </button>
            <button type="button" class="btn btn-secondary" @onclick="BackToList">
                <i class="oi oi-arrow-left" style="margin-right: 2px;"></i>
                Back
                </button>
        </div>
    </EditForm>
</div>


@code {
    Payment payment = new Payment();
    private IList<Subscription>? subscription;


    protected async override Task OnInitializedAsync()
    {
        subscription = await _client.GetFromJsonAsync<List<Subscription>>($"api/Subscriptions");

    }


    private async Task CreatePayment()
    {
        await _client.PostAsJsonAsync("api/Payments/", payment);
        _navManager.NavigateTo("/Payments");

    }



    private async Task BackToList()
    {
        _navManager.NavigateTo("/Payments");
    }

}