@inject HttpClient _client
@inject NavigationManager _navManager





<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <fieldset disabled="@Disabled">
                <div class="card p-4">
                <EditForm Model="@payment" OnValidSubmit="OnValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                        <div>

                        <div class="form-group">
                            <label style="color: black">Subscription:</label>
                            <div>
                                <InputSelect @bind-Value="payment.SubscriptionID" class="form-control">
                                    <option value="">--Select Subscription--</option>
                                    @if (subscription != null)
                                    {
                                        foreach (var subscrip in subscription)
                                        {
                                            <option value="@subscrip.Id">@subscrip.SubscriptionName</option>
                                        }
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => payment.SubscriptionID)" />
                            </div>
                        </div>


                        <div class="form-group">
                            <label style="color: black">Payment card: </label>
                            <div>
                                <InputText @bind-Value="payment.CardNum" class="form-control" />
                                <ValidationMessage For="@(() => payment.CardNum)" />

                            </div>
                        </div>



                        <div class="form-group">
                            <label style="color: black">Card Cvv: </label>
                            <div>
                                <InputText @bind-Value="payment.Cvv" class="form-control" />
                                <ValidationMessage For="@(() => payment.Cvv)" />

                            </div>
                        </div>

                        <div class="form-group">
                            <label style="color: black">Card Exp: </label>
                            <div>
                                <InputText @bind-Value="payment.CardExp" class="form-control" />
                                <ValidationMessage For="@(() => payment.CardExp)" />

                            </div>
                        </div>
                        @if (!Disabled)
                        {
                            <button type="submit" class="btn btn-primary btn-block" style="margin-top: 1.5rem;">
                                @ButtonText
                            </button>
                        }

                        <br>
                        </div>
                    </EditForm>
                    </div>
              
            </fieldset>
            <button class="btn btn-secondary btn-block" @onclick="BackToList">Back to List</button>
        </div>
    </div>
</div>








@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Payment? payment { get; set; }
    //[Parameter] public List<Subscription>? subscription { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Subscription>? subscription;

    protected async override Task OnInitializedAsync()
    {
        subscription = await _client.GetFromJsonAsync<List<Subscription>>($"{"api/Subscriptions/"}");

    }

    private void BackToList()
    {
        _navManager.NavigateTo("/Payments");
    }
}