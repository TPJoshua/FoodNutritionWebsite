@page "/Staffs/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<div class="create-staff-container">
    <h3 class="create-staff-title">Create New Staff</h3>
    <hr />
    <EditForm Model="@staff" OnValidSubmit="CreateStaff">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>First Name: </label>
            <div>
                <InputText @bind-Value="@staff.FirstName" class="form-control" placeholder="Please input First Name" />
                <ValidationMessage For="@(() => staff.FirstName)" />
            </div>
        </div>
        <div class="form-group">
            <label>Last Name: </label>
            <div>
                <InputText @bind-Value="@staff.LastName" class="form-control" placeholder="Please input Last Name" />
                <ValidationMessage For="@(() => staff.LastName)" />
            </div>
        </div>
        <div class="form-group">
            <label>Date Of Birth: </label>
            <div>
                <InputDate @bind-Value="@staff.DOB" class="form-control" placeholder="Please input Date Of Birth" />
                <ValidationMessage For="@(() => staff.DOB)" />
            </div>
        </div>
        <div class="form-group">
            <label>Gender: </label>
            <div>
                <InputText @bind-Value="@staff.Gender" class="form-control" placeholder="Please input Gender" />
                <ValidationMessage For="@(() => staff.Gender)" />
            </div>
        </div>
        <div class="form-group">
            <label>Contact Number: </label>
            <div>
                <InputText @bind-Value="@staff.ContactNumber" class="form-control" placeholder="Please input Contact Number" />
                <ValidationMessage For="@(() => staff.ContactNumber)" />
            </div>
        </div>
        <div class="form-group">
            <label>Personal Email: </label>
            <div>
                <InputText @bind-Value="@staff.PersonalEmail" class="form-control" placeholder="Please input Personal Email" />
                <ValidationMessage For="@(() => staff.PersonalEmail)" />
            </div>
        </div>
        <div class="form-group">
            <label>Work Email: </label>
            <div>
                <InputText @bind-Value="@staff.WorkEmail" class="form-control" placeholder="Please input Work Email" />
                <ValidationMessage For="@(() => staff.WorkEmail)" />
            </div>
        </div>
        <div class="form-group">
            <label>Address: </label>
            <div>
                <InputText @bind-Value="@staff.Address" class="form-control" placeholder="Please input Address" />
                <ValidationMessage For="@(() => staff.Address)" />
            </div>
        </div>
        <div class="form-group">
            <label>Role: </label>
            <div>
                <InputText @bind-Value="@staff.Role" class="form-control" placeholder="Please input Role" />
                <ValidationMessage For="@(() => staff.Role)" />
            </div>
        </div>
        <div class="form-group">
            <label>Start Date: </label>
            <div>
                <InputDate @bind-Value="@staff.StartDate" class="form-control" placeholder="Please input Start Date" />
                <ValidationMessage For="@(() => staff.StartDate)" />
            </div>
        </div>

        <div class="form-actions">
            <button type="submit" class="btn btn-create">Create Staff</button>
        </div>
    </EditForm>
</div>
@code {
    Staff staff = new Staff();

	private async Task CreateStaff()
	{
		await _client.PostAsJsonAsync("api/Staffs/", staff);
		_navManager.NavigateTo("/Staffs/");
	}
}
