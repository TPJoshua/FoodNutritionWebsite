@page "/Staffs/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<div class="create-staff-container">
    <h3 class="create-staff-title">Create New Staff</h3>
    <hr />
    <EditForm Model="@staff" OnValidSubmit="CreateStaff">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
			<label style="color: black">First Name:</label>
			<InputText @bind-Value="@staff.FirstName" class="form-control" placeholder="Enter First Name" />
            <ValidationMessage For="@(() => staff.FirstName)" />
        </div>
		<div class="form-group">
			<label style="color: black">Last Name: </label>
			<div>
				<InputText @bind-Value="@staff.LastName" class="form-control" placeholder="Enter Last Name" />
				<ValidationMessage For="@(() => staff.LastName)" />
			</div>
		</div>
		<div class="form-group">
			<label style="color: black">Date Of Birth: </label>
			<div>
				<InputDate @bind-Value="@staff.DOB" class="form-control" placeholder="Date Of Birth" />
				<ValidationMessage For="@(() => staff.DOB)" />
			</div>
		</div>
		<div class="form-group">
			<label style="color: black">Gender: </label>
			<div>
				<InputText @bind-Value="@staff.Gender" class="form-control" placeholder="Enter Gender" />
				<ValidationMessage For="@(() => staff.Gender)" />
			</div>
		</div>
		<div class="form-group">
			<label style="color: black">Contact Number: </label>
			<div>
				<InputText @bind-Value="@staff.ContactNumber" class="form-control" placeholder="Enter Contact Number" />
				<ValidationMessage For="@(() => staff.ContactNumber)" />
			</div>
		</div>
		<div class="form-group">
			<label style="color: black">Personal Email: </label>
			<div>
				<InputText @bind-Value="@staff.PersonalEmail" class="form-control" placeholder="Enter Personal Email" />
				<ValidationMessage For="@(() => staff.PersonalEmail)" />
			</div>
		</div>
		<div class="form-group">
			<label style="color: black">Work Email: </label>
			<div>
				<InputText @bind-Value="@staff.WorkEmail" class="form-control" placeholder="Enter Work Email" />
				<ValidationMessage For="@(() => staff.WorkEmail)" />
			</div>
		</div>
		<div class="form-group">
			<label style="color: black">Address: </label>
			<div>
				<InputText @bind-Value="@staff.Address" class="form-control" placeholder="Enter Address" />
				<ValidationMessage For="@(() => staff.Address)" />
			</div>
		</div>
		<div class="form-group">
			<label style="color: black">Role: </label>
			<div>
				<InputText @bind-Value="@staff.Role" class="form-control" placeholder="Enter Role" />
				<ValidationMessage For="@(() => staff.Role)" />
			</div>
		</div>
		<div class="form-group">
			<label style="color: black">Start Date: </label>
			<div>	
				<InputDate @bind-Value="@staff.StartDate" class="form-control" placeholder="Enter Start Date" />
				<ValidationMessage For="@(() => staff.StartDate)" />
			</div>
		</div>

	<button type="submit" class="btn btn-success btn-block">
		Create Staff
	</button>
</EditForm>
</div>
@code {
    Staff staff = new Staff();

	private async Task CreateStaff()
	{
		await _client.PostAsJsonAsync("api/Staffs/", staff);
		_navManager.NavigateTo("/Staffs/");
	}
}
